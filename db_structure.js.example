/***
 *  ---- СТРАННИК ----
 *  ---- ИНСТРУКЦИЯ ---
 *
 *  система СТРАННИК это система призвана заменить миграции, упростить процес разработки проектов
 *
 *  СТРАННИК является системой контроля структуры базы данных.
 *
 *  Объект tables содержит список таблиц которые должны быть в базе (системные таблицы)
 *
 *  Ключи первого уровня это имена таблиц.
 *      Правила написания имен таблиц:
 *      1) Все имена пишутся исключительно в нижнем регистре
 *      2) В качестве разделителя использовать символ "_" (нижнее тере)
 *  Ключи второго уровня это имена полей:
 *      1) Базовые правила соответетствую правилам базы данных
 *          правила наименования полей:
 *      2) первичный ключ "id" не указывается в шаблоне он добавится автоматически
 *          если нужно исключить поле "id" из таблицы то укажте id: false,
 *          если нужно изменить параметры поля "id" то просто укажите его как и обычное поле
 *              id: {
 *                  type: int,
 *                  default: 0,
 *                  primary_key: true,
 *                  auto_increment: true
 *              }
 *          незабудьте указать что это первичный ключ primary_key: true
 *
 *      3) если поле является связующим  то имя поля должно быть следующего вида:
 *           id_{имя связующей таблицы без префикса "table_"}_table если установлен режим option.binding_fields: id_name_table
             или {имя связующей таблицы без префикса "table_"}_id если установлен режим option.binding_fields: name_id
 *      4) если в одной таблице требуется несколько связующих полей к одной итойже таблице
 *          то после пост-префикса ..._table или _id имени поля можно добавить любой дополнительный пост-превикс через символ "_"
 *          пример в режиме option.binding_fields: id_name_table :{
 *              id_users_table_create: 'id', // поля для связи с пользователями - кто создал запись в тукущей табице
 *              id_users_table_last_update: 'id' // поля для связи с пользователями - кто сделал посделнюю правку
 *              id_users_table_del: 'id' // поля для связи с пользователями - кто произвел мягкое удаление
 *          }
            пример в режиме option.binding_fields: name_id :{
  *              users_id_create: 'id', // поля для связи с пользователями - кто создал запись в тукущей табице
  *              users_id_last_update: 'id' // поля для связи с пользователями - кто сделал посделнюю правку
  *              users_id_del: 'id' // поля для связи с пользователями - кто произвел мягкое удаление
  *          }
 *  параметры полей могут указываться в нескольких форматах
 *      1) Полный (ввиде объекта параметров)
 *          type: '{тип поля в базе данных}' список типов будет указан ниже
 *          constraint: {размер поля} запвисит от типы может быть не обезательным
 *          default: {значение по умолчанию} если не указать то выставится автоматически: для числовых - 0; для тесктовых - ''; json - {}; ...
 *          index: true - если нужно индексировать поле
 *
 *          param: {...} параметры доп системы странника используются для конструктора отображения и конструктора полей в создоваемой системе
 *
 *      2) Сокращенный в виде строки
 *          {тип поля}[({размер поля})][_index`если нужно интексировать поле`]
 *          пример:
 *              {название поля в бд}: 'int_index', // поле integer(11) default 0 // c добавлением индекса по данному полю в таблице (имена индексов автоматически)
 *              {название поля в бд}: 'int(9)', // integer(9) default 0
 *              {название поля в бд}: 'varchar', // varchar(255) default '';
 *              {название поля в бд}: 'varchar(40)_index', //varchar(40) default ''; // c добавлением индекса по данному полю в таблице (имена индексов автоматически)
 *              {название поля в бд}: 'varchar(63)', // varchar(63) default '';
 *              {название поля в бд}: 'text', // text nullable; на поле типа text индек лучше не ставить
 *      3) Смешанный - массив из 2 параметров. Первый - это строка как во втором варианте а второй это объект "param" как в первом варианте
 *          пример:
 *              {название поля в бд}: ['int_index', {
 *                  type: 'number',
 *                  label: 'Проценты',
 *                  top_params: {
 *                      min: 0,
 *                      step: 1
 *                      max: 100,
 *                      default: 50,
 *                      placeholder: 'Проценты'
 *                  }
 *              }], ...
 *              в базе данных будет создано поле integer (11) default 0; и проиндексированно
 *              в конструкторе полей системы будет поле <input type="number"
 *
 *
 * параметры:
 *
 *
 * для того чтобы произвести любые изменения в базе данных просто исправте шаблон и сохраните
 * если странник работает в автоматическом режиме он тутже применит изменения
 * если в ручном то нужно будет запустить структуризацию
 *
 * отрицательная строна СТРАННИКА:
 *  минусом странника является невозможность переименовать созданную таблицу или поля
 *  (при переименовании поля или таблицы - старая таблица будет удалена и созданна новая без данных тоже и сменапи полей)
 *  этот минус присутствует по крайней мере на текущей версии реализации странника, но по опыту работы могу сказать что это ненужно
 *  коррекция имен нужна только на начальном этапе разработки функционала,когда в разрабатываемомо функционале еще нету критически важных данных
 *
 *
 *
 * type: increments, //(not to write: constraint and index)
 *            bigIncrements, //(not to write: constraint and index)
 *            int,
 *            big_int, //(not to write: constraint)
 *            text, //(not to write: constraint and index)
 *            longtext, //(not to write: constraint and index)
 *            varchar,
 *            float, //(not to write: constraint)
 *            decimal, //(not to write: constraint)
 *            bool, //(not to write: constraint)
 *            binary, //(not to write: constraint)
 *           'id' == 'int_index' // the field type is specified for linking fields



   top_parametrs - type:
        text,
        tel,
        password,
        textarea,
        date,
        date_sql,
        number,
        double,
        color,
        time,
        email,
        select,
        checkbox,
        edit,
        elements

    view - отображение в списке/ default - false
    edit - отображение при заполнении/ default -true
    auto_save - быстрое редактирование в списке/ default false
    select_list - отображение в списке связи / default false

    require: true - валидация при заполении| обезательно для заполнения
    unique: true - валидация при заполении| уникальное
    pattern: 'reg' - валидация при заполении| проверка заполнения по регулярному выражению
 */
let md5 = require('md5-nodejs');
global.password_hash = pass => md5(pass + 'losals_systems')
const
    tables = {
        users: {
            login: ['varchar_index', {
                type: 'text',
                label: 'Логин',
                placeholder: 'Логин пользователя',
                view: true,
                unique: true,
                require: true,
                top_params: {
                    valid: { // валидационные параметры
                        min_length: 5,
	                    max_length: 255,
                        unique: true,
                        require: true,
                        only_latin: true // только в латинице
                    }
                }
            }],
            password: ['varchar_index', {
                type: 'password',
                label: 'Пароль',
                placeholder: 'Для имнения пароля укажите новый',
                top_params: {
	                save_only: true, // сохранять только при переданном значении
                    add_require: true, // при создании новой записи поле обезательно
                    function_save: 'password_hash({data})', // перед сохранение прогнать через функцию
                    valid: { // валидационные параметры
                        min_length: 8,
	                    max_length: 255,
                    }
                }
            }],
            data: 'text',
            first_name: ['varchar', {
                type: 'text',
                label: 'Фамилия',
                view: true,
                select_list: true,
                require: true,
                top_params: {
                    valid: {
                        min_length: 2,
	                    max_length: 255,
                        require: true,
                        only_cyrillic: true // только в кирилица
                    }
                }
            }],
            last_name: ['varchar', {
                type: 'text',
                label: 'Имя',
                view: true,
                select_list: true,
                require: true,
                top_params: {
                    valid: {
                        min_length: 2,
	                    max_length: 255,
                        require: true,
                        only_cyrillic: true // только в кирилица
                    }
                }
            }],
            middle_name: ['varchar', {
                type: 'text',
                label: 'Отчество',
                view: true,
                select_list: true,
                top_params: {
                    valid: {
                        min_length: 2,
	                    max_length: 255,
                        only_cyrillic: true // только в кирилица
                    }
                }
            }],
            phone: ['string(12)', {
                type: 'tel',
                label: 'Телефон',
                require: true,
                placeholder: '8 (###) ###-##-##',
                default: '80000000000',
                view: true,
                require: true,
                top_params: {
                    mask: '8 (999) 999-99-99', // маска при заполнении
                    function_view: 'phone_format({data})', // функция отображения
                    function_save: 'phone_strip({data})', // перед сохранение прогнать через функцию
                    valid: {
                        min_length: 10,
                        require: true,
                    }
                }
            }],
            hash: 'varchar(40)_index',
            last_active: ['int', {
                type: 'datetime',
                label: 'Активность',
                view: false,
                edit: false
            }],
            id_role_table: ['id', {
                type: 'select',
                label: 'Роль',
                view: true,
                require: true
            }],
            active: 'active_param',
            session: 'json'
        }
        ,option: {
            field_key: 'varchar_index',
            field_data: 'text'
        }
        ,role: {
            title: {
                type: 'varchar',
                param: {
                    type: 'text',
                    label: 'Роль пользователей',
                    view: true,
                    select_list: true
                }
            },
            is_works: {
                type: 'bool',
                default: false,
                param: {
                    type: 'checkbox',
                    label: 'Участвет в сетке расписания',
                    default: true,
                    view: true
                }
            },
            active: ['bool', {
                type: 'checkbox',
                label: 'Активность'
            }]
        }
        ,key_access: {
            title: ['varchar', {
                type: 'text',
                label: 'Ключ доступа',
                placeholder: 'Ключ в талинице',
                view: true,
                edit: false
            }],
            description: ['varchar', {
                type: 'textarea',
                label: 'Описание',
                placeholder: 'Для чего создан данный ключ',
                view: true
            }]
        }
        ,menu_vs_role_access: {
            id_role_table: 'id',
            id_menu_table: 'id',
            id_key_access_table: 'id'
        }
        ,menu: {
            title: 'varchar',
            parent: 'id',
            uri: 'varchar',
            icon: 'varchar',
            order: 'int_index',
            view_menu: 'bool',
            active: 'active'
        }

        ,accounts: {
            email: 'varchar_index',
            password: 'varchar_index',
            fio: 'varchar'
        }
        ,projects: {
            title: 'varchar'
        }
        ,projects_cases: {
            id_project: 'id',
            title: 'varchar',
            price:'decimal',
            period_of_months: 'int',
            active: {
                type: 'bool',
                default: true
            }
        }
        ,projects_licenses: {
            id_projects_cases_table: 'id',
            id_accounts_table: 'id',
            date_start: 'date',
        }
        ,codes_licenses: {
            id_projects_licenses_table: 'id',
            licenses: 'varchar(40)_index',
            key: 'varchar',
            identifier_device: 'varchar' // идентификатор устройства у которому привязанна лицензия
        }
    },

    data = { // автоматическое базовое заполнение
        option: [
            {
                search: {
                    field_key: 'version'
                },
                data: {
                    field_data: 0.1
                }
            },
            {
                search: {
                    field_key: 'date'
                },
                data: {
                    field_data: time()
                }
            }

        ],
        key_access: [
            {
                search: {
                    title: 'view'
                },
                data: {
                    description: 'Просмотр'
                }
            },
            {
                search: {
                    title: 'edit'
                },
                data: {
                    description: 'Изменение'
                }
            },
            {
                search: {
                    title: 'add'
                },
                data: {
                    description: 'Создание'
                }
            },
            {
                search: {
                    title: 'del'
                },
                data: {
                    description: 'Удаление'
                }
            }
        ],
        role: [
            {
                search: {
                    title: 'Администратор'
                },
                data: {
                    active: true
                }
            },
        ],
        users: [
            {
                search: {
                    login: 'admin',
                },
                data: {
                    password: password_hash('password qwerty'),
                    first_name: 'Админ',
                    last_name: 'Админ',
                    // если поле это id_(название таблицы без префикса)_table: {а значение это объект} // то в поле мы записываем -
                    id_role_table: {title: 'Администратор'}, // id из таблицы по объекту поиска
                    active: true
                }
            }
        ],
        menu: [
            {
                search: {
                    uri: 'admin/menu'
                },
                data: {
                    title: 'Меню',
                    order: 1,
                    icon: 'fa fa-sitemap',
                    view_menu: true,
                    active: true
                }
            }
        ],
        menu_vs_role_access: [
            {
                search: {
                    id_role_table: {title: 'Администратор'},
                    id_menu_table: {uri: 'admin/menu'},
                    id_key_access_table: {title: 'view'}
                }
            },
            {
                search: {
                    id_role_table: {title: 'Администратор'},
                    id_menu_table: {uri: 'admin/menu'},
                    id_key_access_table: {title: 'edit'}
                }
            },
            {
                search: {
                    id_role_table: {title: 'Администратор'},
                    id_menu_table: {uri: 'admin/menu'},
                    id_key_access_table: {title: 'add'}
                }
            }
        ]
    }
;

module.exports = {tables, data};